// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`upload mult fail and reupload action test 1`] = `
Array [
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/registerUpload",
  },
  Object {
    "payload": Object {
      "filePath": "filePathOne",
      "name": "fileOne",
      "upload": "uploadKey",
    },
    "type": "Upload/pushItem",
  },
  Object {
    "payload": Object {
      "filePath": "filePathTwo",
      "name": "fileTwo",
      "upload": "uploadKey",
    },
    "type": "Upload/pushItem",
  },
  Object {
    "payload": Object {
      "filePath": "filePathThree",
      "name": "fileThree",
      "upload": "uploadKey",
    },
    "type": "Upload/pushItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUpload",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "id": "123456",
      "upload": "uploadKey",
    },
    "type": "Upload/successUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "id": "123456",
      "upload": "uploadKey",
    },
    "type": "Upload/successUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/failedUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/uploadComplete",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUpload",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "id": "123456",
      "upload": "uploadKey",
    },
    "type": "Upload/successUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/uploadComplete",
  },
]
`;

exports[`upload mult fail and reupload action test 2`] = `
Object {
  "upload": Immutable.Map {
    "uploadKey": Immutable.Upload {
      "wattingQueue": Immutable.List [],
      "uploadedQueue": Immutable.List [
        Immutable.UploadItem {
          "filepath": "filePathOne",
          "state": "uploaded",
          "id": "123456",
          "name": "fileOne",
        },
        Immutable.UploadItem {
          "filepath": "filePathTwo",
          "state": "uploaded",
          "id": "123456",
          "name": "fileTwo",
        },
        Immutable.UploadItem {
          "filepath": "filePathThree",
          "state": "uploaded",
          "id": "123456",
          "name": "fileThree",
        },
      ],
      "failedQueue": Immutable.List [],
      "uploading": false,
      "cancle": false,
      "name": "uploadKey",
    },
  },
}
`;

exports[`upload mult success action test 1`] = `
Array [
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/registerUpload",
  },
  Object {
    "payload": Object {
      "filePath": "filePathOne",
      "name": "fileOne",
      "upload": "uploadKey",
    },
    "type": "Upload/pushItem",
  },
  Object {
    "payload": Object {
      "filePath": "filePathTwo",
      "name": "fileTwo",
      "upload": "uploadKey",
    },
    "type": "Upload/pushItem",
  },
  Object {
    "payload": Object {
      "filePath": "filePathThree",
      "name": "fileThree",
      "upload": "uploadKey",
    },
    "type": "Upload/pushItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUpload",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "id": "123456",
      "upload": "uploadKey",
    },
    "type": "Upload/successUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "id": "123456",
      "upload": "uploadKey",
    },
    "type": "Upload/successUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "id": "123456",
      "upload": "uploadKey",
    },
    "type": "Upload/successUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/uploadComplete",
  },
]
`;

exports[`upload mult success action test 2`] = `
Object {
  "upload": Immutable.Map {
    "uploadKey": Immutable.Upload {
      "wattingQueue": Immutable.List [],
      "uploadedQueue": Immutable.List [
        Immutable.UploadItem {
          "filepath": "filePathOne",
          "state": "uploaded",
          "id": "123456",
          "name": "fileOne",
        },
        Immutable.UploadItem {
          "filepath": "filePathTwo",
          "state": "uploaded",
          "id": "123456",
          "name": "fileTwo",
        },
        Immutable.UploadItem {
          "filepath": "filePathThree",
          "state": "uploaded",
          "id": "123456",
          "name": "fileThree",
        },
      ],
      "failedQueue": Immutable.List [],
      "uploading": false,
      "cancle": false,
      "name": "uploadKey",
    },
  },
}
`;

exports[`upload one file fail action test 1`] = `
Array [
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/registerUpload",
  },
  Object {
    "payload": Object {
      "filePath": "filePathOne",
      "name": "fileOne",
      "upload": "uploadKey",
    },
    "type": "Upload/pushItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUpload",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/failedUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/uploadComplete",
  },
]
`;

exports[`upload one file fail action test 2`] = `
Object {
  "upload": Immutable.Map {
    "uploadKey": Immutable.Upload {
      "wattingQueue": Immutable.List [],
      "uploadedQueue": Immutable.List [],
      "failedQueue": Immutable.List [
        Immutable.UploadItem {
          "filepath": "filePathOne",
          "state": "failed",
          "id": null,
          "name": "fileOne",
        },
      ],
      "uploading": false,
      "cancle": false,
      "name": "uploadKey",
    },
  },
}
`;

exports[`upload one file success action test 1`] = `
Array [
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/registerUpload",
  },
  Object {
    "payload": Object {
      "filePath": "filePathOne",
      "name": "fileOne",
      "upload": "uploadKey",
    },
    "type": "Upload/pushItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUpload",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/startUploadItem",
  },
  Object {
    "payload": Object {
      "id": "123456",
      "upload": "uploadKey",
    },
    "type": "Upload/successUploadItem",
  },
  Object {
    "payload": Object {
      "upload": "uploadKey",
    },
    "type": "Upload/uploadComplete",
  },
]
`;

exports[`upload one file success action test 2`] = `
Object {
  "upload": Immutable.Map {
    "uploadKey": Immutable.Upload {
      "wattingQueue": Immutable.List [],
      "uploadedQueue": Immutable.List [
        Immutable.UploadItem {
          "filepath": "filePathOne",
          "state": "uploaded",
          "id": "123456",
          "name": "fileOne",
        },
      ],
      "failedQueue": Immutable.List [],
      "uploading": false,
      "cancle": false,
      "name": "uploadKey",
    },
  },
}
`;
